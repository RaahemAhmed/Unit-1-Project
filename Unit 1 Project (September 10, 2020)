import java.util.Scanner;
public class Main {
	
	public static void main(String[] args) {
	    
	    
	    Scanner reader = new Scanner(System.in);
	    
	    System.out.println("Enter the mass of the water in grams");
	    double mass = reader.nextDouble();
	    System.out.println("Enter the initial temperature of the water in Celsius");
	    double initialTemperature = reader.nextDouble();
	    if (initialTemperature < -273.14)
	        initialTemperature = -273.14;
	    System.out.println("Enter the ending temperature in Celsius");
	    double endingTemperature = reader.nextDouble();
	     if (endingTemperature < -273.14)
	        endingTemperature = -273.14;
	        
	   String initialPhase = "liquid";
	   if(initialTemperature < 0)
	    initialPhase = "solid";
	   if(initialTemperature > 100)
	    initialPhase = "vapor";
	  
	   String finalPhase = "liquid";
	   if(endingTemperature < 0)
	    finalPhase = "solid";
	   if(endingTemperature > 100)
	   finalPhase = "vapor";
	   
	   
	        
	   System.out.println("Mass: " + mass + " grams");
	   System.out.println("InitialTemperature: " + initialTemperature + "C " + initialPhase);
	   System.out.println("FinalTemperature: " + endingTemperature + "C " + finalPhase + "\n");
	
	    boolean endothermic = false;
	    if(endingTemperature > initialTemperature)
	        endothermic = true;
	        
	   double heatEnergy = 0;
	        
	        
	   // initialPhase solid     
	  	if(initialPhase.equals("solid")) {
	        
	        heatEnergy += tempChangeSolid(mass, initialTemperature, endingTemperature, finalPhase, endothermic);
	        
	        if(!finalPhase.equals("solid")) {
	            
	            heatEnergy += fusion(mass,endothermic);
	            heatEnergy += tempChangeLiquid(mass, 0, endingTemperature, finalPhase, endothermic);
	        }

        if(finalPhase.equals("vapor")) {
            heatEnergy += vaporization(mass,endothermic);
            heatEnergy += tempChangeVapor(mass, 100, endingTemperature, finalPhase, endothermic);
        }
	} //end of section for initialPhase solid
	
        // initialPhase liquid	
		if(initialPhase.equals("liquid")) {
		     heatEnergy += tempChangeLiquid(mass, initialTemperature, endingTemperature, finalPhase, endothermic);
		     
		if(finalPhase.equals("solid")) {
		     heatEnergy += fusion(mass,endothermic);
		     heatEnergy += tempChangeSolid(mass, 0, endingTemperature, finalPhase, endothermic);
		 }
		 
        if(finalPhase.equals("vapor")) {
            heatEnergy += vaporization(mass,endothermic);
            heatEnergy += tempChangeVapor(mass, 100, endingTemperature, finalPhase, endothermic);
        }    
		      
		      
		} // end of section for initialPhase liquid
	
	// initialPhase vapor
	if(initialPhase.equals("vapor")) {
	    heatEnergy += tempChangeVapor(mass, initialTemperature, endingTemperature, finalPhase, endothermic);
	    
	if(!finalPhase.equals("vapor")) {
	            heatEnergy += vaporization(mass,endothermic);
	            heatEnergy += tempChangeLiquid(mass, 100, endingTemperature, finalPhase, endothermic);
	        }
	if(finalPhase.equals("solid")) {
            heatEnergy += fusion(mass,endothermic);
            heatEnergy += tempChangeSolid(mass, 0, endingTemperature, finalPhase, endothermic);
        }    
	}// end of section for initialPhase vapor
	
	System.out.println("Total Heat Energy" + round(heatEnergy) + "kJ");
	
	System.out.println("Total Heat Energy" + heatEnergy + " kJ");
	
	} //main method ends here
	
	
	
	public static double tempChangeSolid(double mass, double startTemp, double endTemp, String endPhase, boolean endothermic) {
	    if(!endPhase.equals("solid"))
	        endTemp = 0;
	   double energyChange = round(mass*0.002108*(endTemp - startTemp));
	        if(endothermic)
	            System.out.println("Heating (solid): " + energyChange + "kJ");
	        else 
	             System.out.println("Cooling (solid): " + energyChange + "kJ");
	   return energyChange;
	}
	
		public static double tempChangeVapor(double mass, double startTemp, double endTemp, String endPhase, boolean endothermic) {
	    if(!endPhase.equals("vapor"))
	        endTemp = 100;
	   double energyChange = round(mass*0.001996*(endTemp - startTemp));
	        if(endothermic)
	            System.out.println("Heating (vapor): " + energyChange + "kJ");
	        else 
	             System.out.println("Cooling (vapor): " + energyChange + "kJ");
	   return energyChange;
	}
	
		public static double tempChangeLiquid(double mass, double startTemp, double endTemp, String endPhase, boolean endothermic) {
	    if(endPhase.equals("solid"))
	        endTemp = 0;
	    if(endPhase.equals("vapor"))
	        endTemp = 100;    
	        
	   double energyChange = round(mass*0.004184*(endTemp - startTemp));
	        if(endothermic)
	            System.out.println("Heating (liquid): " + energyChange + "kJ");
	        else 
	             System.out.println("Cooling (liquid): " + energyChange + "kJ");
	   return energyChange;
	}
	
	public static double fusion(double mass, boolean endothermic){
	    double energyChange;
	    if(endothermic) {
	        energyChange = round(0.333*mass);
	        System.out.println("Melting: " + energyChange + "kJ");
	    }
	    else {
	        energyChange = round(-0.333*mass);
	        System.out.println("Freezing: " + energyChange + "kJ");
	    }
	    return energyChange; 
	}
	
	public static double vaporization(double mass, boolean endothermic){
	    double energyChange;
	    if(endothermic) {
	        energyChange = round(2.257*mass);
	        System.out.println("Evaporation: " + energyChange + "kJ");
	    }
	    else {
	        energyChange = round(-2.257*mass);
	        System.out.println("Condensation: " + energyChange + "kJ");
	    }
	    return energyChange; 
	}
	
	public static double round(double x){
	    x *= 1000;
	    if(x > 0)
	       return (int)(x + 0.5)/1000.0;
	   else 
	       return (int)(x - 0.5)/1000.0;
	}
	
	
	
	
}